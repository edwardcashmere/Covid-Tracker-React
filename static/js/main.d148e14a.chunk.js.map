{"version":3,"sources":["context/Global/covidContext.js","context/Country/countryContext.js","Components/Cards/Cards.jsx","context/Daily/dailyCovidContext.js","Components/Charts/Charts.jsx","Components/CountryPicker/CountryPicker.jsx","context/Global/covidReducer.js","context/types.js","context/Global/CovidState.js","context/Daily/dailyCovidReducer.js","context/Daily/DailyCovidState.js","context/Country/countryReducer.js","context/Country/CountryState.js","App.js","index.js","Components/Charts/Charts.module.css","App.module.css","Components/Cards/Cards.module.css","Components/CountryPicker/CountryPicker.module.css","Images/covid.png"],"names":["covidContext","createContext","countryContext","Cards","useContext","CovidContext","CountryContext","fetchData","confirmed","deaths","recovered","lastupdate","Cconfirmed","Crecovered","Cdeaths","ClastUpdate","useEffect","className","styles","container","Grid","spacing","justify","Typography","variant","component","gutterBottom","heading","item","xs","md","Card","cx","card","infected","CardContent","color","start","end","duration","separator","Date","toDateString","dailyCovidContext","Charts","DailyCovidContext","dailyData","getValue","object","v","Object","entries","value","push","linechart","chart","options","title","display","text","fontSize","data","labels","k","key","getKeys","map","a","datasets","b","label","borderColor","fill","barChart","backgroundColor","legend","CountryPicker","useState","Country","setCountry","getCountries","countries","getCountryData","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","country","i","name","state","action","type","payload","lastUpdate","error","CovidState","props","initialState","useReducer","covidReducer","dispatch","axios","get","res","message","Provider","children","cases","DailyCovidState","dailyCovidReducer","CountryState","countryReducer","url","console","log","App","image","src","CovidImg","alt","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d148e14a.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst covidContext = createContext();\n\nexport default covidContext;","import { createContext } from 'react';\n\nconst countryContext = createContext();\n\nexport default countryContext;","import React, { useContext, useEffect } from 'react';\nimport CovidContext from '../../context/Global/covidContext';\nimport CountryContext from '../../context/Country/countryContext';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport styles from './Cards.module.css';\nimport cx from 'classnames'\n\nconst Cards = () => {\n  const covidContext = useContext(CovidContext);\n  const countryContext = useContext(CountryContext);\n  const { fetchData, confirmed, deaths, recovered,lastupdate } = covidContext;\n  const { Cconfirmed,Crecovered,Cdeaths,ClastUpdate } = countryContext;\n  useEffect(() => {\n    fetchData();\n    //eslint-disable-next-line\n  },[]);\n  return (\n    \n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n      <Typography variant=\"h3\" component=\"h2\" gutterBottom className={styles.heading}>\n        Global Covid Data\n      </Typography>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\"><CountUp start ={0} end={confirmed} duration={2.5} separator=\",\" /></Typography>\n             <Typography color=\"textSecondary\">{new Date(lastupdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of active cases</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\"><CountUp start ={0} end={recovered} duration={2.5} separator=\",\" /></Typography>\n            <Typography color=\"textSecondary\">{new Date(lastupdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from covid 19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\"><CountUp start ={0} end={deaths} duration={2.5} separator=\",\" /></Typography>\n            <Typography color=\"textSecondary\">{new Date(lastupdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n\n\n        <Typography variant=\"h3\" component=\"h2\" gutterBottom className={styles.heading}>\n        Country Covid Data\n      </Typography>     \n         <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\"><CountUp start ={0} end={Cconfirmed} duration={2.5} separator=\",\" /></Typography>\n            <Typography color=\"textSecondary\">{new Date(ClastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\"><CountUp start ={0} end={Crecovered} duration={2.5} separator=\",\" /></Typography>\n            <Typography color=\"textSecondary\">{new Date(ClastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\"><CountUp start ={0} end={Cdeaths} duration={2.5} separator=\",\" /></Typography>\n            <Typography color=\"textSecondary\">{new Date(ClastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import { createContext } from 'react';\n\nconst dailyCovidContext = createContext();\n\nexport default dailyCovidContext;","import React,{useEffect,useContext} from 'react';\nimport DailyCovidContext from '../../context/Daily/dailyCovidContext';\nimport CountryContext from '../../context/Country/countryContext';\nimport styles from './Charts.module.css';\nimport { Line,Bar} from 'react-chartjs-2'\n\nconst Charts = () => {\n   const dailyCovidContext =useContext(DailyCovidContext);\n   const countryContext =useContext(CountryContext);\n   const { dailyData,confirmed,recovered,deaths } =dailyCovidContext;\n   const { Cconfirmed,Crecovered,Cdeaths } =countryContext;\n   useEffect(()=>{\n    dailyData()\n    //eslint-disable-next-line\n   },[])\nconst getKeys=(object)=>{\n    let k =[]\n    for (const [key,value] of Object.entries(object)){\n        k.push(key)\n        \n        \n    }\n    return k\n}\nconst getValue=(object)=>{\n    let v =[]\n    for (const [key,value] of Object.entries(object)){\n        v.push(value)\n        \n        \n    }\n    return v\n}\n//console.log(Cconfirmed,Cdeaths)\nconst linechart =(\n    (confirmed !==null || recovered !==null || deaths !==null) ?\n    (<Line className={styles.chart}\n        options={{\n        title:{\n            display:true,\n            text:\"Global Trend \",\n            fontSize:\"50\"\n        }\n    }}\n        data={{\n        labels:getKeys(confirmed).map(a=>a),\n        datasets:[{\n            data:getValue(confirmed).map(b=>b),\n            label:'infected',\n            borderColor:'#3333ff',\n            fill:true\n\n        },{\n            data:getValue(recovered).map(b=>b),\n            label:'recovered',\n            borderColor:'green',\n            fill:true\n\n        },{\n            data:getValue(deaths).map(b=>b),\n            label:'deaths',\n            borderColor:'red',\n            fill:true\n\n        }]\n    }}/>):(<h4>Loading...</h4>))\n    const barChart =(\n        <Bar\n        data={{\n            labels:['Infected','Recovered','Deaths'],\n            datasets:[{\n                label:'people',\n                backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\n                data:[Cconfirmed,Crecovered,Cdeaths]\n\n            }]\n        }}\n        options={{\n            legend:{display:false},\n            title:{display:true,\n            text:\"Country Statistics Latest\",\n        fontSize:'50'}\n        }}\n        />\n    )\n\n    return (\n        <div className={styles.container}>\n            {linechart}\n            {barChart}\n        </div>\n    )\n}\n\nexport default Charts\n","import React,{useState,useEffect,useContext} from 'react';\nimport { FormControl,NativeSelect} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport CountryContext from '../../context/Country/countryContext';\n\n\nconst CountryPicker = () => {\n    const [Country,setCountry] =useState('Angola');\n    const countryContext =useContext(CountryContext)\n    const { getCountries,countries,getCountryData} = countryContext\n    useEffect(()=>{\n        getCountries()\n        if(Country){\n            getCountryData(Country)\n        }\n       // console.log(Country)\n        //eslint-disable-next-line\n    },[Country])\n    const onChange = (e)=>{\n        setCountry(e.target.value);\n    }\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue={countries && countries[0]} onChange={onChange}>\n            {countries && countries.map((country,i) => (<option key={i} value={country.name}>{country.name}</option>))}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker\n","import { GET_GLOBAL_DATA,FETCH_ERROR} from '../types.js';\n\n\nexport default (state,action)=>{\n    switch(action.type){\n        case GET_GLOBAL_DATA:\n            return{\n                ...state,\n                confirmed:action.payload.confirmed.value,\n                recovered:action.payload.recovered.value,\n                deaths:action.payload.deaths.value,\n                lastupdate:action.payload.lastUpdate\n            }\n            case FETCH_ERROR:\n                return {\n                    ...state,\n                    error:action.payload\n    \n            }\n            \n        default:\n            return state\n    }\n}","export const GET_GLOBAL_DATA=\"GET_GLOBAL_DATA\";\nexport const GET_DAILY_DATA=\"GET_DAILY_DATA\";\nexport const FETCH_ERROR=\"FETCH_ERROR\";\nexport const GET_COUNTRIES=\"GET_COUNTRIES\";\nexport const GET_COUNTRY_DATA = \"GET_COUNTRY_DATA\";","import React ,{useReducer} from 'react';\nimport CovidContext from './covidContext';\nimport covidReducer from './covidReducer';\nimport axios from 'axios';\nimport { GET_GLOBAL_DATA,FETCH_ERROR } from '../types.js'\n\nconst CovidState =(props)=>{\n    const initialState ={\n        confirmed: 0,\n        recovered:0,\n        deaths:0,\n        lastupdate:new Date()\n        \n        \n\n    }\n\n    const [state,dispatch] =useReducer(covidReducer,initialState)\n\n//get initial global data\nconst url ='https://covid19.mathdro.id/api';\n\nconst fetchData =async ()=>{\n    try {\n        const res = await axios.get(url)\n        dispatch({type:GET_GLOBAL_DATA,payload:res.data})\n      //  console.log(res.data)\n    } catch (error) {\n        dispatch({type:FETCH_ERROR,payload:error.message})\n        \n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nreturn (\n    <CovidContext.Provider \n    value={{\n        confirmed:state.confirmed,\n        recovered:state.recovered,\n        deaths:state.deaths,\n        lastupdate:state.lastupdate,\n        fetchData,\n\n\n    }}>\n        {props.children}\n    </CovidContext.Provider>\n)\n    \n\n\n\n}\n\nexport default CovidState;","import { FETCH_ERROR,GET_DAILY_DATA} from '../types.js';\n\n\nexport default (state,action)=>{\n    switch(action.type){\n        case GET_DAILY_DATA:\n            return {\n            ...state,\n            confirmed: action.payload.cases,\n            recovered: action.payload.recovered,\n            deaths: action.payload.deaths,\n\n        }\n        case FETCH_ERROR:\n            return {\n                ...state,\n                error:action.payload\n\n        }\n        default:\n            return state\n    }\n}","import React ,{useReducer} from 'react';\nimport DailyCovidContext from './dailyCovidContext';\nimport dailyCovidReducer from './dailyCovidReducer.js';\nimport axios from 'axios';\nimport { FETCH_ERROR,GET_DAILY_DATA } from '../types.js'\n\nconst DailyCovidState =(props)=>{\n    const initialState ={\n        confirmed: null,\n        recovered:null,\n        deaths:null,\n        \n        \n\n    }\n\n    const [state,dispatch] =useReducer(dailyCovidReducer,initialState)\n\nconst url ='https://disease.sh/v3/covid-19/historical/all?lastdays=70';\n\n//get daily data\nconst dailyData=async ()=>{\n    try {\n        const res = await axios.get(`${url}`)\n        dispatch({type:GET_DAILY_DATA,payload:res.data})\n        //console.log(res.data)\n    } catch (error) {\n        dispatch({type:FETCH_ERROR,payload:error.message})\n        \n    }\n}\n\n\n\n\n\n\nreturn (\n    <DailyCovidContext.Provider \n    value={{\n        confirmed:state.confirmed,\n        recovered:state.recovered,\n        deaths:state.deaths,\n        dailyData,\n\n\n    }}>\n        {props.children}\n    </DailyCovidContext.Provider>\n)\n    \n\n\n\n}\n\nexport default DailyCovidState;","import { GET_COUNTRIES ,GET_COUNTRY_DATA} from '../types'\n\n\nexport default (state,action)=>{\n\n    switch(action.type){\n        case GET_COUNTRIES:\n            return {\n                ...state,\n                countries:action.payload.countries\n            }\n        case GET_COUNTRY_DATA:\n            return {\n                ...state,\n                Cconfirmed:action.payload.confirmed.value,\n                Crecovered:action.payload.recovered.value,\n                Cdeaths:action.payload.deaths.value,\n                ClastUpdate:action.payload.lastUpdate\n            }\n        default:\n            return state\n    }\n}","import React,{useReducer} from 'react';\nimport CountryContext from './countryContext';\nimport countryReducer from './countryReducer';\nimport { GET_COUNTRIES,GET_COUNTRY_DATA} from '../types.js'\nimport axios from \"axios\";\n\nconst CountryState =props =>{\n    const initialState ={\n        countries:null,\n        Cconfirmed:0,\n        Crecovered:0,\n        Cdeaths:0,\n        ClastUpdate:0,\n    };\n\n    const [state,dispatch]=useReducer(countryReducer,initialState)\n\n//getCountries\nconst url ='https://covid19.mathdro.id/api';\nconst getCountries = async()=>{\ntry {\n    const res = await axios.get(`${url}/countries`)\n    dispatch({type:GET_COUNTRIES,payload:res.data})\n  //  console.log(res.data)\n} catch (error) {\n    console.log(error)\n    \n}\n}\n\nconst getCountryData =async (country)=>{\n    try {\n        const res = await axios.get(`${url}/countries/${country}`)\n        dispatch({type:GET_COUNTRY_DATA,payload:res.data})\n       // console.log(res.data)\n    } catch (error) {\n        console.log(error)\n    }\n\n}\n\n\n    return (\n        <CountryContext.Provider\n        value={{\n            countries:state.countries,\n            Cconfirmed:state.Cconfirmed,\n            Crecovered:state.Crecovered,\n            Cdeaths:state.Cdeaths,\n            ClastUpdate:state.ClastUpdate,\n            getCountries,\n            getCountryData\n        }}>\n            {props.children}\n        </CountryContext.Provider>\n    )\n}\n\nexport default CountryState;","import React from 'react';\nimport { Card,Chart,CountryPicker } from './Components';\nimport styles from './App.module.css';\nimport CovidState from './context/Global/CovidState.js';\nimport DailyCovidState from './context/Daily/DailyCovidState';\nimport CountryState from './context/Country/CountryState';\nimport CovidImg from './Images/covid.png'\n\n\nfunction App() {\n  return (\n    <CovidState>\n      <CountryState>\n        <DailyCovidState>\n          <div className={styles.container} >\n            <img  className={styles.image} src={CovidImg} alt=\"Covid-19\"/>\n            < Card />\n            < CountryPicker />\n            < Chart />\n          </div>\n        </DailyCovidState>\n      </CountryState>\n    </CovidState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__rnzyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2XqFC\",\"card\":\"Cards_card__1ak5A\",\"infected\":\"Cards_infected__bZ078\",\"recovered\":\"Cards_recovered__1wTBM\",\"deaths\":\"Cards_deaths__1YvrA\",\"heading\":\"Cards_heading__3_ind\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__4LMvE\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}